branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    language: node_js
    node_js: '8'
    after_success:
    - yarn global add meshblu-connector-schema-generator meshblu-connector-uploader-github
    - mkdir -p ./deploy/assets
    - meshblu-connector-schema-generator > ./deploy/assets/schemas.json
    - meshblu-connector-uploader-github --installers-path ./deploy/assets
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - meshblu-connector-pkger && meshblu-connector-installer-macos && meshblu-connector-uploader-github
env:
  global:
  - secure: p6XTvXTpHmIbKejBtPlExTJQKcWcXvDoeM37htGYlhUB9mg1mgjdwxCiD3fLq9MNRKkScWkKMjl5tvaBf6hvAec2VXo0/s/nbka5QRMHk26Yu1pqveuPSldX95fh2M5zfMMmt4me3ra/BMj0WPbziQS+SO5YejJT+DgJc/9EWS0OJ1WqwusSYgGh948tl0NaP3gCz/K04JvU/klSIg3JitPxobqWcYftzsVpnIBnPKKXPmAW27Ml0e6G6pC4c0E73gH7gpJAj3EFAsyQIRbTAR1eZztkiqVbEtZmzF8DCjTlneeV3JufEzBPeBNYfjdf2jb/ejXY59cxwUlrkcDkrFv5LfTHqdzcbUjpFJtZgbzQ9G5n3+izT6QKWsBY46svGwqEKeXJEyvW1cm7tVhLWRqxxQm5BOMMX/XCkApNDTpnwiGLVakERKjEqs+0tzqWzGLnn+DjUiihgr69+puO7Dp4ou8VAUlTTc7Aodu4YVSFSJWiHVhlA/Y/uHzAij8hm2xnv/XXsYV8/fipAaL8J0CQZOriQ8CT6L34sbS49gv3BCCYGaJWcyMKZ8MBW26+ChYHJW2aNftg+uZMCJMA7IECdBmeWGoSI02uJFZojcWtNW3hj+7FZmgn+lxG9SOgPqQDkw9pxXG45czq7XKC30RBvVoY935jGCQxJe1GHCY=
  - secure: ihR5tSAj7S6xmHwNh+/Pnj02sdFbenVd4FxTnhfBsiilvc3mDKrJ7SDLEqTWaORHx3ETWiHyea6nMK/ca91L6T7thrx8KGQOSSzl/8PSuMwckTV68fgrPshlodOc36kkogE0Wuy0NgtBmhsqTIom9rPFNwnTMPi6xoJYu1etaCnAKNeoFhKzZe/UXOa1wVDteQr5ZGsjD92Ix+Qo4y1NY9htZ1PJ4mHRo6QhdmeX4NissPuD3HA6YdR6wdNW/VvEzIqys0EBBjksfLnbMDhsnldaiEqISSfqQeOzSaB7NHDiSRwbvV8WNop9WvdMy8dxxOLyBjXD6KldkZI5dji42gVIx60NEd7lVMr6dy6eGOw2E9fzFbe07yl45xLBFZkM4nOl2dwjVe+kwKtHCaA49UKNJ7StpHk/RUuqj/oSys6oeRRQ1wqGRYHEuT0j1G1db3a0oMq9jVEz4ae95FsEJW+GadqXFGjOwyZHZEuvLRlKXSqj1zn/uxuEjEadvO3Q9804btyQ/Z4FORNHvc31MDjOl2LttuVVPkh2J1WCo1nwGNWzPLk9JPgLFjBKfMIHQ68LrI7RZkeP2pW19r9U26HoDEmi4e1ZT2ZJELUE4isjsJnSd1rK2q+8iykCQqXdrZrs+kfIdhHBWTWtyMbNB4DX9lV2xzOyNKCROlM0U9A=
  - secure: fp7/gxy/4xn9jupiWBLCygnDrTCzGsQhNmf7ya2btTr/ivDZ5fJLt/8ifveB0/+TlrK/Vn0MOEGjHQMfV1Ya7oWqdKNJSnrPHPwzUTBQp32RQNftCtixwWj4IcSTVFyW6rnXpNvLuqbc3NeN5ORUcusDniOqw+16hFmjYPZtRISQNxOFBmlblenbYL49F8qnXnRDAXZgqZqjqMQYQsXnGwhbGBTMS1sFF7MDp3XLXDIPl1ONkGqXgJub3cBaay/EcojeEbGdYQAAh1WWHnCAvmcB+P40Ken/jIBqrQZfaOMtiarIVg5WaCGqE1clIwEsiDafz0G4/GmFxid2imtoaxG2kOMUAo6sFMDuIkHjk9D/edH5mVkJked52ne6kLvNL1rmdXulGk+03fS459sw91mI0ca0gqBZctxYo2F//4uEQHfA+lW1vW3iwsgOKAEAlMo4BMGK/KJgIbD8qnURko0grRQzR2ZFPKfcOkuz5e85lqYRj9TiBXf9L00PdXp9dwZRYS1rjD2HlevDmI+LpeU65n/j+Ythu8V58ZF8kCpACY9IWV1ou1PSb1r3AYc/SQxKJ/3oCWLW3aubdEcZuLVgtvrcIEwlJT/gJqNzynt6VkYYp22ke9kb8rCXgXWKnS63EnQeBuRTqaPoSrcpaNFtwPpcilxuT9twHJEpL0s=
  - secure: PSaxbcOHozXKitgwVTwpXJ9Dr+VfJY9XsmZFB7E8WHv6IMC4iUMrx3b3wbHW5sf0JkCxVa2kP/oHbaLEXEFOHddSnnbHL/uE8Y8oOE0r1OLR1gW8SIwm8gJz2Y3qDDaIF1MgOljxY77zXFsnIzSR5V1Dypf5lgkJxv8FowaeFag7PL3QHxQ0q1lbb1EURsKAAeII+Z/YgQM63anu36m7mQjjVyyMkj6Sf/3RNG7xn8lSMizA3ugp3IkJzB7LlgI9HWHRR+h4Rjs8U77OFuKL416cJceW2o/h2MtItHY40HP+mMANDDs9kEPIGqoP1Vy4Q/rFZDQmo3iL5fB2WRVBKhNT+sHW8keEnf5HbjVqFUopsCebhInjINRLEUbfdD2ModI+8tuBzEAG5dnr4Vpb2yu6+495qKmRkthY5w3KO8sGoFnMtiyPg/3p/u6VzgCRSjNzEsUFDk+UdLoBcO9TVBsyEn7Yta/7/6WutnahQAaOJFqFlbLhO2VH/ey98ne4MfbqmrVfS+fXzTUSLB8s2I4LNzlfnYjhJCRzzz77OM7Npu+1BitfotiKjUaLPQnztLL2E6eH8GTDPDvmnSF3Mvy2+RkpeZs5AujYIij0eqERWHHtDeWcaRHlHjkl7f8msZSNbQO/ufi1tQvCLQBMaX19PYDlWur9FjrQR0MpU4A=
  - secure: Ri5P9wyH1TkkaJL6r2FfqKltA82R3Y65s5KSEbEFgBAbE/sVU/fqKyyDshPabPFzo47/vr7xeexJJ38a1sD2tsHltczy5uBBplAs8nLhZSXffIMqsatqI3/X0IF3aTEJcGzXde37A6P7VJvhYgZS7hfnry93MpfXzjueQlmqa9ZKTxBfcMFbT0Q2/73BmB6cG+JZlfLC4LEFIUl6l5Kvwz7cFGmcX//hPEjfSxZbZQRRFiZ/IBIR0lcfXSWqKcQRJvEn6omf/I9601sqSwgHx5VZMpmSkconKc0y4poiLwiyCmua0f7Tsw7d0a1doKu7ePNPQ4YOC27e9H8sQngxiO0H88Lb36k2fDlyGKDTlEhwspx5Ae0SvitEQY9xZyRx46/X+YwkQrHAndxUF05ELOxvYv0sIOYonBXW+qXQ4LhOj1koC36PhekdUfmPvSd/fgPUs+piKZfpyRn2DJZsp0my/svKFca6v2E3pKF188zlXrHJchBg44yMhw2ZXEHMG1nC6epM57oamHaX8xqJnGNzEheBjN02n7T7BvRZs8DeQuIupUSwqnUVnLmWeoXzfz+qUv9pqQpd2PaItQdCxm+7+hDrpAhYhrT73ft+F2mcpkXl10IFHdbvBFj+MMDcIL1hc0fden/t6NkvBT0+i+pcwKJ+wT+mtKk6u9B2aSs=
  - secure: AoThuz+jHnjjoSCCOR729COVtGzmNzdRhNPPURIPZFuhlyB8gRisRaWc16Sxoj1tSnoDUAgmO5dM0LlFdo3xJdwDpeHKZyp06afIzA6FYMacCoCOQsDAejtGYypS8dfDu8mfUP0WYzZSbhSZt9GVyCfUTTRxmu0K51GvU+q+GpzNI3ToG5MZZm7ZHkNSK3ihMS7lrQqA+GNWz+1BmopZwGmfSLnwSOijPbL/OmhbIQkKo3KEMrg3ej2YhP7vSY9zV5rZV+Rhg0ucOmpQJupAwc2+eioPZGegz7IKZWCMztpqWc+u4E3LjEr7WumTiQeeiTLWWTF+r+Th10Lwx28xuyIpZQLUnzHLnjTDMOwvZVAq5WLZGFPGJhA9UTf93T2arHZtassYemXzACAZtUb51EUwn/ZwsCHgAn8sX9VuJPSVLmqaqfFt/WBg9fbfoMjPycrqZbjpIhGE6VQ6AHVebmmjIeFcnmfZZQTbRNk7KoQOt+FQRViQx9MPvfXHbBLVLUOxjZzmSqRABtjDV78ZvIQ8Fi73lBh52FhtL5FrfGM9+itr5lKLfiY4KxLs3ldX5LE7r/baXho7OB69prJbo5krMv+NZ9WPuPUahpusuAI3+h9TnE1rzMwwNFpD7VuMfw7UUHT1XnGYD6Ji749882NBsV2MwLtcz2Za+fHfSGg=
  - secure: aw/hkHQx1b25VtkwcqS8FEos0oJ8s3evEKpq2n3+BXohBazsskKqhoLq0Kgk6plTYT9gDRN5l+OVA7/cNAHfWBY2CvQpwb8T91DE7t4x2LrgPo2c7QtgvYGqkIH1LgejbEprUcNlWNiVAmQiBwxjMPjUlaPWOyiFu6vm+d0uEibu2szhPfmBiQuAm5CazHXdoNNxDTvb8bN9G9haD/IGPMKHuLzznbQu9+4n2COLyvaEGpz2BZx9Hxeu5dfHImKVTt9MUuISBN905FHdBK5f+hsnP5uV5UghYPsNusnQkoBLWR1+y3Qb636XK6W6mL3jB8LWclJEIjErOkTK6+m5I6z7eXk1a+/jmXL0J2SYIcgB37IRAfsdd//Fuv5q48DnSuN0lolANetsYVPbX5mMYwkMxD17dq5UARPGqg/VOwHmUs9YPSDtBd5BQwGOGBS6wjpHCCqR0fhctxecqzKyKGeR2LTmpaIhMJ3ISimCGACWmV+I5n5Fq94qSSGhalPKMIIce3rzb1yJZ2fR9NTjoZCYsQkXR99OlY6bOHWgt4pCCNkBMyTRtAX/O9EQha9t3jYBGD+LQymPuj02E+QupDEk35c31dZhMH1GVkVNg68QGqS5byX9JAc6FrgqJOdWgy925PRNRZVCIikGd4TaGzsaGCmATmyz0GzIIWvS2jE=
  - secure: AoZbTqC89+C1HpDKF8HRuRtMofbNCHIzAuDqMPhtqVR1VFrcKSiNCb2uMw/bPP5y1/s4GGLL/ILP7HsAaA36ddTPkzg+BsCpgqk2MlZJ54AoRul0zcYavGC6i750qKsYK0m2aLAzBEZWorECI+/w7LsUpHG63IBugLQQf1cljmbeNllttTfYg3W9I8sGBum1IgSmop81IcKJh+LRvF8Je0L9QvTs6Wyh2aVAXDv5Q2zg8GJjH1l0xNJkya2B8ki0lUi4kc5Zoi7JnGKX6bpmif/y5T9GuhyVAcOnLNoV3DYdY1dFui57CUeSI/GIX7Zj4/hObkSDGIk/7XXGunsM2d8KNP/5xYia2zXyidQxnHjW6UvFmy5ske6vv9XlwFkBbh3+05hbdU8KAaWlyafLAAN0m/pQRWepHgAJFvOJkWI/uRHyMJx+i/IsC1q6Q+w4aaEH1h2FjugWbBK+FR5tmnJlXYkCmu4zR2Kbrm95bb9pVRDPGvzRhJDBGgQHnM9T8sNjO3jw/hfeRF1d5ohQuU/D4eHJ+qZ23Isl4x3mzyjl+Wm5plbdWjRorI0/APIZ/iVvgC0lmGBzsQyDvp2ucgiZXPBDmsgdOLMKqqODzfn/CM3n9c6owjffio1IYXyh/ejl08CyL6RHQBH3IWp3zk0FOj1P7kh13jqAujEOho8=
